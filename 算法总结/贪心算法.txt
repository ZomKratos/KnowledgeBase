贪心算法定义：从局部最优解推导出全局最优解。
例子：取10次钱，求取得最多钱的总额。
框架套路：无，分散很广
思考过程：
1.什么时候局部最优？
2.能不能推断在局部最优的情况下全局最优？
经典例题：
1.跳跃游戏：给你一个非负整数数组 nums ，你最初位于数组的 第一个下标 。数组中的每个元素代表你在该位置可以跳跃的最大长度。问能否到达终点。
在遍历时维护能够跳跃到的最远位置range

2.跳跃游戏2：在跳跃游戏的基础上问最少跳跃次数。
在遍历时更新到达每一个位置的最小跳跃次数。

3.加油站：给出加油、耗油两个数组，从哪个节点出发可以绕场一圈。
双层循环，第一层为起始位置，第二层从起始位置到结束位置。

4.无重叠区间：给出几个区间，问要至少去掉几个区间才能让区间之间无重复区域。
按起始大小排列，便利所有区间，当某区间与前一个区间相交，则判断相交情况来选择一个区间删除。

5.合并区间：给出一个交错数组表示若干个区间，合并所有重叠的区间并返回区间数组。
区间问题的关键在于记录上一个区间的头尾情况并用当前区间的头尾与其进行对比。

6.划分字母区间：给出一个字符串，要求划分出最多子串，每个字母最多出现在一个子串中，返回每段的长度列表。
遍历字符串创建每个字符对应最晚出现位置的字典，再次遍历字符串维护已出现的最晚位置maxRange。

7.单调递增的数字：当相邻位置x和x+1满足x<=x+1则该整数是单调递增的。给一个整数n，求小于或等于n的最大单调递增数字。
重点：要从后向前遍历，维护一个下标index，表示从index位开始的值都要设置为'9'，index在x+1位大于x为的时候记录x+1。结束后再开启一个循环，把所有index后的值设置为‘9’。

总结：贪心算法就是复杂一点正常算法题，关键在于能否把局部最优推断出全局最优。如果能看出规律的话，通常一个循环就写完了。
关键字：区间，加油站，跳跃游戏。



